CREATE DATABASE IF NOT EXISTS usof_database;

use usof_database;

CREATE TABLE IF NOT EXISTS USERS (
    id INT PRIMARY KEY AUTO_INCREMENT,
    login VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    full_name VARCHAR(255),
    email VARCHAR(255) NOT NULL,
    profile_picture VARCHAR(255),
    rating INT DEFAULT 0,
    activate TINYINT(1) NOT NULL DEFAULT 0,
    role ENUM('user', 'admin') DEFAULT 'user',
    activation_link TEXT,
    reset_link TEXT,
    refresh_token TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Posts (
    id INT PRIMARY KEY AUTO_INCREMENT,
    AuthorID INT,
    Title VARCHAR(255) NOT NULL,
    Status ENUM('active', 'inactive') DEFAULT 'active',
    Content TEXT,
    screenshot VARCHAR(255),
    isBlocked TINYINT(1) NOT NULL DEFAULT 0,
    FOREIGN KEY (AuthorID) REFERENCES Users (UserID),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Categories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Description TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Post_Categories (
    post_id INT,
    category_id INT,
    FOREIGN KEY (post_id) REFERENCES Posts (id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES Categories (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Comments (
    id INT PRIMARY KEY AUTO_INCREMENT,
    AuthorID INT,
    Content TEXT,
    PostID INT,
    ParentCommentID INT,
    isBlocked TINYINT(1) NOT NULL DEFAULT 0,
    Status ENUM('active', 'inactive') DEFAULT 'active',
    FOREIGN KEY (PostID) REFERENCES Posts (id) ON DELETE CASCADE,
    FOREIGN KEY (AuthorID) REFERENCES Users (id),
    FOREIGN KEY (ParentCommentID) REFERENCES Comments(id) ON DELETE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Likes (
    id INT PRIMARY KEY AUTO_INCREMENT,
    AuthorID INT,
    PostID INT,
    CommentID INT,
    Type ENUM('like', 'dislike') DEFAULT 'like',
    FOREIGN KEY (AuthorID) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (PostID) REFERENCES Posts (id) ON DELETE CASCADE,
    FOREIGN KEY (CommentID) REFERENCES Comments (id) ON DELETE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
